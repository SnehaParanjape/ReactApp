{"version":3,"sources":["FirstPage.js","SecondPage.js","ThirdPage.js","MainPage.js","index.js"],"names":["sampleData","FirstPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFiles","files","reader","FileReader","onload","headerCondition","completeFile","result","split","currentDelimiter","require","detect","tempfirstLine","secondLine","secondLine2","i","length","isNaN","Number","thirdLine","tempfirstLine2","thirdLine2","k","parseInt","cols","uristates","state","uriPresent","temp_types","types","l","isInteger","indexOf","join","replace","columns","m","temp_uriPrefixArray","uriPrefixArray","q","str1","j","document","getElementById","value","name","checked","setState","csvData","predicateArray","fileName","firstLine","fileContents","n","display_table","react_default","a","createElement","dist","data","csvDelimiter","tableClassName","hasHeader","option","columnMappingString","delimiter","readAsText","handleSelectChange","event","x","target","predicateValue","currentColumnIndex","handleDatatypeChange","temp_uriPresent","key_option","checkBoxchecked","clicked_button","insert_query","table_query","currentSubject","bind","assertThisInitialized","handleBrowseButton","handleDelimiterChange","handleOptionChange","handleKeyOptionChange","handleInsertQuery","handleTableQuery","handleSaveQuery","onQueryChanged","handlePredicateChange","handleURIPrefix","temp_subject","graph_name","predicateWithURI","predicateWithoutURI","toLowerCase","binds","toUpperCase","temp","textToSave","textToSaveAsBlob","Blob","type","textToSaveAsURL","window","URL","createObjectURL","downloadLink","download","innerHTML","href","style","display","body","appendChild","click","currentpredicateArray","currenturiPrefixArray","optionItems","map","column","key","toString","id","react_file_reader_default","multipleFiles","fileTypes","onClick","onChange","size","contentEditable","defaultValue","rows","Component","SecondPage","e","text","tempOriginalcompleteFile","jsonData","OriginalcompleteFile","parser","tableName","num_cols","col_names","datatypes","pk","fk","ref_table","sql","feed","parsedJsonFormat","results","compactJsonTablesArray","toCompactJson","datatype","undefined","primaryKey","hasOwnProperty","foreignKeys","b","c","reference","table","FullQuery","num_tables","flag","y","p","Dracula","Graph","Renderer","Raphael","Layout","Spring","graph","r","addNode","s","addEdge","directed","t","draw","ThirdPage","load_option","url","query","handleLoadOptionsChange","handleURLChange","handleGraphNameChange","handleLoadQuery","load_query","TabPage","esm","src_FirstPage_0","src_SecondPage_0","src_ThirdPage_0","ReactDOM","render","MainPage"],"mappings":"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","file":"static/js/main.77886654.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { CsvToHtmlTable } from 'react-csv-to-table';\nimport ReactFileReader from 'react-file-reader';\n\nimport './FirstPage.css';\n\nconst sampleData = `\nChrysler Imperial,14.7,8,440,230,3.23,5.345,17.42,0,0,3,4\nFiat 128,32.4,4,78.7,66,4.08,2.2,19.47,1,1,4,1\n`;\nclass FirstPage extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdelimiter: '',\n\t\t\toption: \"false\",\n\t\t\tkey_option: \"none\",\n\t\t\tcheckBoxchecked: false,\n\t\t\tfileName: '',\n\t\t\tfirstLine: '',\n\t\t\tfileContents: '',\n\t\t\tcsvData: sampleData,\n\t\t\t//csvData: '',\n\t\t    columns: ['column1','column2','column3','column4'],\n\t\t    predicateArray: ['column1','column2','column3','column4'],\n\t\t \tn: 2,\n\t\t    predicateValue: '',\n\t\t    display_table: sampleData,\n\t\t    columnMappingString: '',\n\t\t    clicked_button: 'table',\n\t\t    insert_query: '',\n\t\t    table_query: '',\n\t\t    types: [\"boolean\",\"byte\",\"date\",\"float\",\"int\",\"short\",\"string\",\"uri\"],\n\t\t    currentColumnIndex: 0,\n\t\t    uriPrefixArray: [\"\"],\n\t\t    uriPresent: [],\n\t\t    currentSubject: \"\",\n\t\t};\n\n\t\tthis.handleFiles = this.handleFiles.bind(this);\n\t\tthis.handleBrowseButton = this.handleBrowseButton.bind(this);\n\t\tthis.handleDelimiterChange = this.handleDelimiterChange.bind(this);\n\t\tthis.handleOptionChange = this.handleOptionChange.bind(this);\n\t\tthis.handleKeyOptionChange = this.handleKeyOptionChange.bind(this);\n\t\tthis.handleInsertQuery = this.handleInsertQuery.bind(this);\n\t\tthis.handleTableQuery = this.handleTableQuery.bind(this);\n\t\tthis.handleSaveQuery = this.handleSaveQuery.bind(this);\n\t\tthis.handleDatatypeChange = this.handleDatatypeChange.bind(this);\n\t\tthis.onQueryChanged = this.onQueryChanged.bind(this);\n\t\tthis.handlePredicateChange = this.handlePredicateChange.bind(this);\n\t\tthis.handleURIPrefix = this.handleURIPrefix.bind(this);\n\t}\n\n\thandleFiles = files => {\n\t\tlet reader = new FileReader();\n    \treader.onload =  () => {\n\t\t\tlet text = reader.result;\n\t\t\tlet completeFile = text.split('\\n');\n\t\t\tlet CSV=require('csv-string');\n\t\t\tlet currentDelimiter = CSV.detect(completeFile);\n\t\t\t//let currentDelimiter = '|';\n\t\t\tlet tempfirstLine=completeFile[0].split(currentDelimiter);\n\t\t\tlet secondLine = completeFile[1].split(currentDelimiter);\n\t\t\tlet secondLine2 = secondLine;\n\t      \tfor( let i=0; i < tempfirstLine.length; i++ ) {\n\t      \t\tif(isNaN(secondLine[i]) === false) {\n\t      \t\t\tsecondLine2[i] = Number(secondLine[i]);\n\t      \t\t}\n\t      \t\telse {\n\t      \t\t\tsecondLine2[i] = secondLine[i];\n\t      \t\t}\n\t      \t}\n\t     \tlet headerCondition;\n\t     \tlet thirdLine = completeFile[2].split(currentDelimiter);\n\t     \tlet tempfirstLine2 = tempfirstLine;\n\t     \tlet thirdLine2 = thirdLine;\n\t     \t\n\t     \tfor( let k = 0; k < tempfirstLine.length; k++ ) {\n\t     \t\tif(isNaN(tempfirstLine[k]) === false) {\n\t      \t\t\ttempfirstLine2[k] = parseInt(tempfirstLine[k],10);\n\t     \t\t}\n\t      \t\telse {\n\t      \t\t\ttempfirstLine2[k] = tempfirstLine[k];\n\t      \t\t}\n\n\t      \t\tif(isNaN(thirdLine[k]) === false) {\n\t      \t\t\tthirdLine2[k] = parseInt(thirdLine[k],10);\n\t      \t\t}\n\t      \t\telse {\n\t      \t\t\tthirdLine2[k] = thirdLine[k];\n\t      \t\t}\n\t     \t}\n\n\t     \theaderCondition = (\n\t\t\t\t\t(\n\t\t\t\t\t\t(typeof tempfirstLine2[0]) !== (typeof secondLine2[0])\n\t\t\t\t\t) &&\n\t\t\t\t\t(\n\t\t\t\t\t\t(typeof secondLine2[0]) === (typeof thirdLine2[0])\n\t\t\t\t\t)\n\t\t\t\t) ||\n\t\t\t\t(\n\t\t\t\t\t(\n\t\t\t\t\t\t(typeof tempfirstLine2[1]) !== (typeof secondLine2[1])\n\t\t\t\t\t) &&\n\t\t\t\t\t(\n\t\t\t\t\t\t(typeof secondLine2[1]) === (typeof thirdLine2[1])\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tlet cols, uristates = this.state.uriPresent;\n\t\t\tlet temp_types=this.state.types;\n\n    \t\tif(headerCondition === true) {\n    \t\t\tcols=tempfirstLine;\n    \t\t\tfor (let l = 0; l <tempfirstLine.length; l++) {\n    \t\t\t\ttemp_types[l] = typeof secondLine[l];\n    \t\t\t\tif( typeof secondLine[l] === \"number\" ) {\n    \t\t\t\t\tif( Number.isInteger(secondLine[l])) {\n    \t\t\t\t\t\ttemp_types[l] = \"int\";\n    \t\t\t\t\t}\n    \t\t\t\t\telse if (secondLine[l] % 1 !== 0) {\n    \t\t\t\t\t\ttemp_types[l] = \"float\";\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\telse if (typeof secondLine[l] === \"string\") {\n    \t\t\t\t\ttemp_types[l] = \"char\";\n    \t\t\t\t\tif (secondLine[l] === \"true\" || secondLine[l] === \"false\") {\n    \t\t\t\t\t\ttemp_types[l] = \"boolean\";\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\tif(cols[l].indexOf(' ') >= 0) {\n    \t\t\t\t\tcols[l] = cols[l].split(' ').join('');\n    \t\t\t\t}\n\t\t\t\t\tcols[l] = cols[l].replace(/[^a-zA-Z ]/g, \"\");\n\t\t\t\t\turistates[l] = false;\n    \t\t\t}\n    \t\t} \n    \t\telse {\n    \t\t\tcols=this.state.columns;\n    \t\t\n    \t\t\tfor( let m = 0; m < tempfirstLine.length; m++) {\n    \t\t\t\tcols[m] = \"column\"+m;\n    \t\t\t\turistates[m] = false;\n    \t\t\t}\n    \t\t}\n    \t\t//Initializing ALL Column Headers' Uri Prefix as \"\"\n\t\t\tlet temp_uriPrefixArray = this.state.uriPrefixArray;\n    \t\tfor( let q = 0; q < tempfirstLine.length; q++) {\n    \t\t\ttemp_uriPrefixArray[q] = \"\";\n    \t\t}\n\t\t\tlet str1='';\n\t      \tfor(let j=0;j<tempfirstLine.length -1;j++) {\n\t        \tstr1 += cols[j]+\":\"+ (this.state.types[j])+\",\";\n\t      \t}\n\t      \tstr1 += cols[tempfirstLine.length-1]+\":\"+ (this.state.types[tempfirstLine.length-1]);\n    \t\t//console.log ('ack 443: files', files);\n    \t\t//console.log(files[0].name);\n    \t\tdocument.getElementById(\"url_text\").value = files[0].name;\n\n    \t\tif(headerCondition === true) {\n\t      \tdocument.getElementById(\"header\").checked = true;\n    \t\tdocument.getElementById(\"header2\").checked = false;\n\t      \t}\n    \t\t\n    \t\telse {\n    \t\tdocument.getElementById(\"header2\").checked = true;\n    \t\tdocument.getElementById(\"header\").checked = false;\n    \t\t}\n    \t\t\n\t      \t// Use reader.result\n\t      \tthis.setState({\n\t\t        csvData: reader.result,\n\t\t        columns: cols,\n\t\t        predicateArray: cols,\n\t\t        types: temp_types,\n\t\t        fileName: files[0].name,\n\t\t        firstLine: tempfirstLine,\n\t\t        fileContents: completeFile,\n\t\t        n: tempfirstLine.length,\n\t\t        display_table: <CsvToHtmlTable \n\t\t\t\t\t\t\t        data={reader.result}\n\t\t\t\t\t\t\t        csvDelimiter={currentDelimiter}\n\t\t\t\t\t\t\t        tableClassName=\"table\"\n\t\t\t\t\t\t\t        hasHeader={headerCondition} \n\t\t\t\t\t\t\t    />,\n\t\t        option: headerCondition,\n\t\t        columnMappingString: str1,\n\t\t        delimiter: currentDelimiter,\n\t\t        uriPresent: uristates,\n\t\t        uriPrefixArray: temp_uriPrefixArray,\n\t      \t})\n    \t};\n    \treader.readAsText(files[0]);\n  \t};\n\n  \thandleBrowseButton() {\n\t\tthis.setState({\n\t\t\tdisplay_table: <CsvToHtmlTable \n\t\t\t\t\t\t        data={this.state.csvData}\n\t\t\t\t\t\t        csvDelimiter=\" \"\n\t\t\t\t\t\t        tableClassName=\"table table-hover\"\n\t\t\t\t\t\t        hasHeader={false} \n\t\t\t\t\t\t    />,\n\t\t});\n\t}\n\n  \thandleDelimiterChange(event) {\n\n  \t\tlet currentDelimiter = event.target.value;\n\t\t\tlet tempfirstLine=this.state.fileContents[0].split(currentDelimiter);\n\t\t\tlet secondLine = this.state.fileContents[1].split(currentDelimiter);\n\t\t\tlet secondLine2 = secondLine;\n\t      \tfor( let i=0; i < tempfirstLine.length; i++ ) {\n\t      \t\tif(isNaN(secondLine[i]) === false) {\n\t      \t\t\tsecondLine2[i] = Number(secondLine[i]);\n\t      \t\t}\n\t      \t\telse {\n\t      \t\t\tsecondLine2[i] = secondLine[i];\n\t      \t\t}\n\t      \t}\n\t     \t\n\t     \tlet thirdLine = this.state.fileContents[2].split(currentDelimiter);\n\t     \tlet tempfirstLine2 = tempfirstLine;\n\t     \tlet thirdLine2 = thirdLine;\n\t     \t\n\t     \tfor( let k = 0; k < tempfirstLine.length; k++ ) {\n\t     \t\tif(isNaN(tempfirstLine[k]) === false) {\n\t      \t\t\ttempfirstLine2[k] = parseInt(tempfirstLine[k],10);\n\t     \t\t}\n\t      \t\telse {\n\t      \t\t\ttempfirstLine2[k] = tempfirstLine[k];\n\t      \t\t}\n\n\t      \t\tif(isNaN(thirdLine[k]) === false) {\n\t      \t\t\tthirdLine2[k] = parseInt(thirdLine[k],10);\n\t      \t\t}\n\t      \t\telse {\n\t      \t\t\tthirdLine2[k] = thirdLine[k];\n\t      \t\t}\n\t     \t}\n\n\t     \tlet headerCondition = this.state.option;\n\n\t\t\tlet cols, uristates = this.state.uriPresent;\n\t\t\t\n\t\t\tlet temp_types=this.state.types;\n\n    \t\tif(headerCondition === true) {\n    \t\t\tcols=tempfirstLine;\n    \t\t\tfor (let l = 0; l <tempfirstLine.length; l++) {\n    \t\t\t\ttemp_types[l] = typeof secondLine[l];\n    \t\t\t\tif( typeof secondLine[l] === \"number\" ) {\n    \t\t\t\t\tif( Number.isInteger(secondLine[l])) {\n    \t\t\t\t\t\ttemp_types[l] = \"int\";\n    \t\t\t\t\t}\n    \t\t\t\t\telse if (secondLine[l] % 1 !== 0) {\n    \t\t\t\t\t\ttemp_types[l] = \"float\";\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\telse if (typeof secondLine[l] === \"string\") {\n    \t\t\t\t\ttemp_types[l] = \"char\";\n    \t\t\t\t\tif (secondLine[l] === \"true\" || secondLine[l] === \"false\") {\n    \t\t\t\t\t\ttemp_types[l] = \"boolean\";\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\tif(cols[l].indexOf(' ') >= 0) {\n    \t\t\t\t\tcols[l] = cols[l].split(' ').join('');\n    \t\t\t\t}\n\t\t\t\t\tcols[l] = cols[l].replace(/[^a-zA-Z ]/g, \"\");\n\t\t\t\t\turistates[l] = false;\n    \t\t\t}\n    \t\t} \n    \t\telse {\n    \t\t\t\n    \t\t\tcols=[];\n    \t\t\t//console.log(tempfirstLine.length);\n    \t\t\tfor( let m = 0; m < tempfirstLine.length; m++) {\n    \t\t\t\tcols[m] = \"column\"+m;\n    \t\t\t\t//console.log(cols);\n    \t\t\t\turistates[m] = false;\n    \t\t\t}\n    \t\t\t//console.log(cols);\n    \t\t}\n    \t\t//Initializing ALL Column Headers' Uri Prefix as \"\"\n\t\t\tlet temp_uriPrefixArray = this.state.uriPrefixArray;\n    \t\tfor( let q = 0; q < tempfirstLine.length; q++) {\n    \t\t\ttemp_uriPrefixArray[q] = \"\";\n    \t\t}\n\t\t\tlet str1='';\n\t      \tfor(let j=0;j<tempfirstLine.length -1;j++) {\n\t        \tstr1 += cols[j]+\":\"+ (this.state.types[j])+\",\";\n\t      \t}\n\t      \tstr1 += cols[tempfirstLine.length-1]+\":\"+ (this.state.types[tempfirstLine.length-1]);\n    \t\t//console.log ('ack 443: files', files);\n    \t\t//console.log(files[0].name);\n    \t\tdocument.getElementById(\"url_text\").value = this.state.fileName;\n\n    \t\tif(headerCondition === true) {\n\t      \tdocument.getElementById(\"header\").checked = true;\n    \t\tdocument.getElementById(\"header2\").checked = false;\n\t      \t}\n    \t\t\n    \t\telse {\n    \t\tdocument.getElementById(\"header2\").checked = true;\n    \t\tdocument.getElementById(\"header\").checked = false;\n    \t\t}\n\n// Use reader.result\n\t      \tthis.setState({\n\t\t        columns: cols,\n\t\t        predicateArray: cols,\n\t\t        types: temp_types,\n\t\t        firstLine: tempfirstLine,\n\t\t        n: tempfirstLine.length,\n\t\t        \n\t\t        option: headerCondition,\n\t\t        columnMappingString: str1,\n\t\t        uriPresent: uristates,\n\t\t        uriPrefixArray: temp_uriPrefixArray,\n\t\t        display_table: <CsvToHtmlTable \n\t\t\t\t\t\t\t        data={this.state.csvData}\n\t\t\t\t\t\t\t        csvDelimiter={event.target.value}\n\t\t\t\t\t\t\t        tableClassName=\"table\"\n\t\t\t\t\t\t\t        hasHeader={headerCondition} \n\t\t\t\t\t\t\t    />,\n\t\t        delimiter: event.target.value,\n\t      \t})\n  \t\t/*this.setState({\n\t\t\tdelimiter: event.target.value,\n\t\t\tdisplay_table: <CsvToHtmlTable \n\t\t\t\t\t\t        data={this.state.csvData || sampleData}\n\t\t\t\t\t\t        csvDelimiter={event.target.value}\n\t\t\t\t\t\t        tableClassName=\"table table-hover\"\n\t\t\t\t\t\t        hasHeader={this.state.option} \n\t\t\t\t\t\t    />,\n\t\t})*/\n\t}\n\n\thandleOptionChange(event) {\n\t\tlet x = event.target.value === \"true\" ? <CsvToHtmlTable\n\t\t\t\t\t\t        data={this.state.csvData || sampleData}\n\t\t\t\t\t\t        csvDelimiter={this.state.delimiter}\n\t\t\t\t\t\t        tableClassName=\"table table-hover\"\n\t\t\t\t\t\t        hasHeader={true}\n\t\t\t\t\t\t    />: <CsvToHtmlTable \n\t\t\t\t\t\t        data={this.state.csvData || sampleData}\n\t\t\t\t\t\t        csvDelimiter={this.state.delimiter}\n\t\t\t\t\t\t        tableClassName=\"table table-hover\"\n\t\t\t\t\t\t        hasHeader={false}\n\t\t\t\t\t\t    />;\n\t  this.setState({\n\t  \toption: event.target.value,\n\t  \tdisplay_table: x,\n\t  });\n\t}\n\n\thandleKeyOptionChange(event) {\n\n  \t\tif(event.target.value === \"none\") {\n  \t\t    let temp_uriPresent = this.state.uriPresent;\n            for( let k = 0; k < this.state.n; k++) {\n                if( k === this.state.currentColumnIndex ) {\n                    temp_uriPresent[k] = false;\n                }\n            }\n        //}\n            /*else {\n                for( let l = 0; l < this.state.n; l++) {\n                    if( l === this.state.currentColumnIndex ) {\n                        temp_uriPresent[l] = !temp_uriPresent[l];\n                    }\n                }\n            }*/\n            this.setState({\n                uriPresent: temp_uriPresent,\n            });\n\n  \t\t}\n  \t\telse {\n\t\t\tlet temp_uriPresent = this.state.uriPresent;\n\t\t\t//if(event.target.value === \"none\") {\n\t\t\t\tfor( let k = 0; k < this.state.n; k++) {\n\t\t\t\t\tif( k === this.state.currentColumnIndex ) {\n\t\t\t\t\t\ttemp_uriPresent[k] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t//}\n\t\t\t/*else {\n\t\t\t\tfor( let l = 0; l < this.state.n; l++) {\n\t\t\t\t\tif( l === this.state.currentColumnIndex ) {\n\t\t\t\t\t\ttemp_uriPresent[l] = !temp_uriPresent[l];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}*/\n            this.setState({\n                uriPresent: temp_uriPresent,\n            });\n\t\t}\n            \n        let temp_subject = this.state.firstLine[this.state.currentColumnIndex];\n\t\tthis.setState({\n\t\t\tkey_option: event.target.value,\n\t\t\t//uriPresent: temp_uriPresent,\n            currentSubject: temp_subject,\n\t\t});\n\t}\n\n\thandleSelectChange = (event) => {\n\t\tlet x=0;\n\t\tfor(let i = 0; i < this.state.n; i++ ) {\n\t\t\tif(this.state.columns[i] === event.target.value) {\n\t\t\t\tx=i;\n\t\t\t}\n\t\t}\n\t\tdocument.getElementById(\"predicate_textbox\").value = event.target.value;\n\t    this.setState({\n\t      predicateValue: event.target.value,\n\t      currentColumnIndex: x,\n\t    });\n  \t};\n\n  \thandleDatatypeChange = (event) => {\n\n\t\tlet temp_types = this.state.types;\n\t\tlet temp_uriPresent = this.state.uriPresent;\n\n  \t\tfor( let i = 0; i < this.state.n; i++) {\n  \t\t\tif( i === this.state.currentColumnIndex ) {\n  \t\t\t\ttemp_types[i] = event.target.value;\n  \t\t\t}\n  \t\t}\n\t\tlet str1='';\n\t      for(var j = 0; j < this.state.firstLine.length - 1; j++ ) {\n\t      \tstr1 += this.state.predicateArray[j]+\":\"+ (temp_types[j])+\",\";\n\t      }\n\t      \tstr1 += this.state.predicateArray[this.state.firstLine.length-1]+\":\"+ (temp_types[this.state.firstLine.length-1]);\n\n\t    this.setState({\n\t      types: temp_types,\n\t      columnMappingString: str1,\n\t      uriPresent: temp_uriPresent,\n\t    });\n  \t};\n\n\thandleTableQuery() {\n\t\tlet graph_name = this.state.fileName.split(\".\")[0];\n\t\tlet predicateWithURI = \"\";\n\t\tlet predicateWithoutURI = \"\";\n\n\t\tfor (let x = 0; x <=this.state.firstLine.length-1; x++) {\n\t\t\tif(this.state.uriPresent[x] === true ) {\n\t\t\t\tpredicateWithURI = \"?\"+graph_name.toLowerCase();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpredicateWithURI = \"[]\";\n\t\t\t}\n\t\t}\n\n\t    for( let j = 0; j <= this.state.firstLine.length-1; j++) {\n\t      \tif(this.state.predicateArray[j] !== null) {\n\t      \t\tif(this.state.uriPresent[j] === true) {\n\t\t      \t\tpredicateWithURI += \"_\"+this.state.predicateArray[j];\n\t      \t\t}\n\t      \t\telse {\n\t\t      \t\tpredicateWithoutURI += \"<\"+this.state.predicateArray[j]+\"> ?\"+this.state.predicateArray[j]+\";\\n\";\n\t      \t\t}\n\t\t    }\n\n\t    }\n\n\t\tlet binds = '';\n\t    for(let k = 0; k <= this.state.firstLine.length - 1; k++) {\n\t    \tif(this.state.uriPresent[k] === true) {\n\t    \t\t/*if(this.state.uriPrefixArray[k] === \"\")\n\t    \t\t{\n\t    \t\t\tbinds += \"BIND(IRI(STR(?\"+this.state.predicateArray[k]+\")) AS ?\"+this.state.predicateArray[k]+\"_uri)\\n\";\n\t    \t\t}\n\t    \t\telse {*/\n\t    \t\t\t//binds += \"BIND(IRI(CONCAT(\\\"\"+this.state.uriPrefixArray[k]+\"\\\",STR(?\"+this.state.predicateArray[k]+\"))) AS ?\"+this.state.predicateArray[k]+\"_uri)\\n\";\n\t    \t\t\tbinds += \"BIND(IRI(CONCAT(\\\"\"+graph_name.toUpperCase()+\"#\\\",STR(?\"+this.state.predicateArray[k]+\"))) AS \"+predicateWithURI+\")\\n\";\n\n\t    \t\t//}\n\t    \t}\n\t      }\n\n\t\tlet q=\"INSERT { \\nGRAPH <\"+graph_name+\"> {\\n\"+predicateWithURI+\"\\n\"+predicateWithoutURI+\" } \\n} \\nWHERE { \\nTABLE <file:///Users/sneha.paranjape/Documents/Browse/\"+this.state.fileName+\"> ( \\n 'csv', 'global', '\"+this.state.delimiter+\"' ,\"+this.state.option+\", '\"+this.state.columnMappingString+\"')\\n\"+binds+\"}\";\n\t\tdocument.getElementById(\"load_query_preview_text\").value = q;\n\t\tthis.setState({\n\t\t\ttable_query: q,\n\t\t\tclicked_button: 'table',\n\n\t\t});\n\t}\n\n\thandleInsertQuery() {\n\t\tlet graph_name = this.state.fileName.split(\".\")[0];\n\t\tlet data = '';\n\t\tfor ( let i = 1; i < this.state.fileContents.length; i++) {\n\t\t\tlet temp = this.state.fileContents[i].split(',');\n\t      \tdata +=\"\\n<\"+graph_name+i+\"> a <\"+graph_name+\">\\n\";\n\t      \t\n\t      \tfor( let j = 0; j < temp.length-1; j++) {\n\t      \t\tdata += \"<\"+graph_name+i+\">\";\n\t      \t\tif(this.state.predicateArray[j] !== null) {\n\t      \t\t\tif(this.state.types[j] === \"date\") {\n\t      \t\t\t\tdata += \" <\"+this.state.predicateArray[j]+\"> \\\"\"+temp[j]+\"\\\"^^xsd:date;\";\n\t      \t\t\t}\n\t      \t\t\telse if(this.state.types[j] === \"double\") {\n\t      \t\t\t\tdata += \" <\"+this.state.predicateArray[j]+\"> \\\"\"+temp[j]+\"\\\"^^xsd:double;\";\n\t      \t\t\t}\n\t      \t\t\telse if(this.state.types[j] === \"byte\") {\n\t      \t\t\t\tdata += \" <\"+this.state.predicateArray[j]+\"> \\\"\"+temp[j]+\"\\\"^^xsd:byte;\";\n\t      \t\t\t}\n\t      \t\t\telse if(isNaN(this.state.predicateArray[j]) === true) {\n\t      \t\t\t\tdata += \" <\"+this.state.predicateArray[j]+\"> \"+temp[j]+\";\";\n\t      \t\t\t}\n\t\t      \t}\n\t\t      \telse {\n\t\t      \t\tif(isNaN(this.state.firstLine[j]) === true) {\n\t      \t\t\t\tdata += \" <\"+this.state.firstLine[j]+\"> \"+temp[j]+\";\";\n\t      \t\t\t}\n\t\t      \t}\n\t      \t\tdata += \"\\n\";\n\t      \t}\n\t      \tif(this.state.predicateArray[temp.length-1] !== null) {\n\t      \t\tdata += \"<\"+graph_name+i+\">\";\n\t      \t\tdata += \" <\"+this.state.predicateArray[temp.length-1]+\"> \"+temp[temp.length-1]+\".\";\n\t      \t}\n\t      \telse {\n\t      \t\tdata += \"<\"+graph_name+i+\">\";\n\t      \t\tdata += \" <\"+this.state.firstLine[temp.length-1]+\"> \"+temp[temp.length-1]+\".\";\n\t      \t}\n\t      \tdata += \"\\n\";\n\t    }\n\t\tlet q = \"INSERT DATA {\\nGRAPH <\"+graph_name+\"> {\"+data+\"}\\n}\";\n\t\tdocument.getElementById(\"load_query_preview_text\").value = q;\n\t\tthis.setState({\n\t\t\tinsert_query: q,\n\t\t\tclicked_button: 'insert',\n\t\t});\n\t}\n\n\thandleSaveQuery() {\n\t\tlet textToSave = this.state.clicked_button ===\"insert\" ? this.state.insert_query:this.state.table_query;\n\t\tlet textToSaveAsBlob = new Blob([textToSave], {type: \"text/plain\"});\n\t\tlet textToSaveAsURL = window.URL.createObjectURL(textToSaveAsBlob);\n\t\tlet downloadLink = document.createElement(\"a\");\n\t\tdownloadLink.download = \"file.txt\";\n\t\tdownloadLink.innerHTML = \"Download File\";\n\t\tdownloadLink.href = textToSaveAsURL;\n\t\tdownloadLink.style.display = \"none\";\n\t\tdocument.body.appendChild(downloadLink);\n\t\tdownloadLink.click();\n\t}\n\n\tonQueryChanged(event) {\n\t\tif(this.state.clicked_button === 'insert' ) {\n\t\t\tdocument.getElementById(\"load_query_preview_text\").value = event.target.value;\n\t\t\tthis.setState({\n\t\t\t\tinsert_query: event.target.value,\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\ttable_query: event.target.value,\n\t\t\t})\n\t\t}\n\t}\n\thandlePredicateChange(event) {\n\t\tlet currentpredicateArray = this.state.predicateArray;\n\t\tfor(let i = 0; i < this.state.n; i++ ) {\n\t\t\tif(i === this.state.currentColumnIndex) {\n\t\t\t\tcurrentpredicateArray[i] = event.target.value;\n\t\t\t}\t\n\t\t} \n\t\tthis.setState({\n\t\t\tpredicateArray: currentpredicateArray,\n\t\t})\n\t}\n\n\thandleURIPrefix(event) {\n\t\tlet currenturiPrefixArray = this.state.uriPrefixArray;\n\t\tfor(let i = 0; i < this.state.n; i++ ) {\n\t\t\tif(i === this.state.currentColumnIndex) {\n\t\t\t\tcurrenturiPrefixArray[i] = event.target.value;\n\t\t\t}\t\n\t\t} \n\t\tthis.setState({\n\t\t\turiPrefixArray: currenturiPrefixArray,\n\t\t})\n\t}\n\n\trender() \n\t{\n\t\t let optionItems = this.state.columns.map((column) => \n\t\t    <option key={column.toString()}>\n\t\t    \t{column}\n\t\t    </option>\n      \t\t);\n\n\t\treturn (\n    \t\t\t\n\t    \t\t<div>\n\t\t    \t\t<div id=\"first_div\">\n\t\t\t\t\t\t<div id=\"url_div\"> \n\t\t\t\t\t\t\t<div id=\"url_label_div\">\n\t\t\t\t\t\t\t\tURL: \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"url_text_div\">\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"url_text\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"firstPage_browse_btn_div\">\n\t\t\t\t\t\t\t\t<ReactFileReader \n\t\t\t\t\t\t\t    multipleFiles={false}\n\t\t\t\t\t\t\t    fileTypes={[\".csv\"]} \n\t\t\t\t\t\t\t    handleFiles={this.handleFiles}>\n\t\t\t\t\t\t\t        \n\t\t\t\t\t\t\t    <button id=\"firstPage_browse_btn\" onClick={this.handleBrowseButton}>Browse</button>\n\t\t\t\t\t\t\t    </ReactFileReader>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"second_div\">\n\t\t\t\t\t\t<div id=\"common_label_div\"><h5>Data Preview:</h5></div>\n\t\t\t\t\t\t<div id=\"display\">{this.state.display_table}</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"third_div\">\n\t\t\t\t\t\t<div id=\"delimiter\">\n\t\t\t\t\t\t\t<div id=\"common_label_div\">\n\t\t\t\t\t\t\t\t<b>Delimiter:</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input type=\"text\" id=\"delimiter_textbox\" value={this.state.delimiter} onChange={this.handleDelimiterChange}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"headers\">\n\t\t\t\t\t\t\t<div id=\"common_label_div\">\n\t\t\t\t\t\t\t<b>\tHeaders:</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input type=\"radio\" id=\"header\" name=\"truefalse\" value=\"true\" onChange={this.handleOptionChange}/>\n\t\t\t\t\t\t\tTrue\t\t\n\t\t\t\t\t\t\t<input type=\"radio\" id=\"header2\" name=\"truefalse\" value=\"false\" onChange={this.handleOptionChange}/>\n\t\t\t\t\t\t\tFalse\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"fourth_div\">\n\t\t\t\t\t\t<div id=\"columns_select_div\">\n\t\t\t\t\t\t\t<div id=\"common_label_div\">\n\t\t\t\t\t\t\t\t<b>Column Headers:</b> \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<select onChange={this.handleSelectChange} id=\"columns_select\" size={this.state.n}>\n\t\t\t\t\t\t\t\t{optionItems}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id=\"predicate_div\"> \n\t\t\t\t\t\t\t<div id=\"common_label_div\">     \n\t\t\t\t\t\t    \t<b>Predicate:</b> \n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t<input contentEditable type=\"text\" id=\"predicate_textbox\" defaultValue={this.state.predicateValue} onChange={this.handlePredicateChange}/>\n                            <div id=\"headers\">\n\t\t\t\t\t\t\t\t<input type=\"radio\" id=\"none_header\" name=\"radio_key\" value=\"none\" onChange={this.handleKeyOptionChange}/>\n\t\t\t\t\t\t\t\tNone\n\t\t\t\t\t\t\t\t<input type=\"radio\" id=\"primary_header\" name=\"radio_key\" value=\"primary\" onChange={this.handleKeyOptionChange}/>\n\t\t\t\t\t\t\t\tPrimary Key\n\t\t\t\t\t\t\t</div>\n                            \t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"type\">\n                                <div id=\"common_label_div\">\n                                    <b>Type:</b> \n                                </div>\n                                <select size=\"1\" onChange={this.handleDatatypeChange} id=\"type_select\">\n                                    <option value=\"boolean\">boolean</option>\n                                    <option value=\"byte\">byte</option>\n                                    <option value=\"date\">date</option>\n                                    <option value=\"float\">float</option>\n                                    <option value=\"int\">int</option>\n                                    <option value=\"short\">short</option>\n                                    <option value=\"char\">char</option>\n                                </select>\n                            </div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t<div id=\"fifth_div\">\n\t\t\t\t\t\t<div id=\"firstPage_generate_table_query_div\">\n\t\t\t\t\t\t\t<button type=\"button\" id=\"firstPage_table_query_button\" onClick={this.handleTableQuery}>Generate Table Query</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"firstPage_generate_insert_query_div\">\n\t\t\t\t\t\t\t<button type=\"button\" id=\"firstPage_insert_query_button\" onClick={this.handleInsertQuery}>Generate Insert Query</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"load_query_preview_div\">\n\t\t\t\t\t\t<div id=\"load_query_preview_label\">\n\t\t\t\t\t\t\t<b>Load Query (Preview): </b> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"load_query_preview_text_div\">\n\t\t\t\t\t\t\t{/*<input contentEditable type=\"text\" id=\"load_query_preview_text\" rows=\"4\" defaultValue={this.state.clicked_button ===\"insert\" ? this.state.insert_query:this.state.table_query} onChange={this.onQueryChanged}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</input>*/}\n\t\t\t\t\t\t\t<textarea id=\"load_query_preview_text\" rows=\"4\" defaultValue={this.state.clicked_button ===\"insert\" ? this.state.insert_query:this.state.table_query} onChange={this.onQueryChanged}>\n\t\t\t\t\t\t\t</textarea>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"save_query_div\">  \n\t\t\t\t\t\t<button type=\"button\" id=\"save_query_button\" onClick={this.handleSaveQuery}>Save Query</button>\n\t\t\t\t\t</div>\n\n                    {/*<div id=\"run_query_div\">\n\t\t\t\t\t\t<button type=\"button\" id=\"run_query_button\">Run Query</button>\n\t\t\t\t\t</div>*/}\n\t    \t\t</div>\n\t\t)\n\t}\n}\n\nexport default FirstPage","import React, { Component } from 'react';\nimport ReactFileReader from 'react-file-reader';\nimport './App.css';\nimport './SecondPage.css';\n\nclass SecondPage extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      fileName: '',\n      jsonData: '',\n      OriginalcompleteFile: '',\n      columnMappingString: '',\n      table_query: '',\n    };\n\n    this.handleTableQuery = this.handleTableQuery.bind(this);\n    this.handleSaveQuery = this.handleSaveQuery.bind(this);\n   // this.handleConnect = this.handleConnect.bind(this);\n  }\n\n  handleFiles = files => {\n    let reader = new FileReader();\n    \n    reader.onload = (e) => {\n\n      let text = reader.result;\n      let tempOriginalcompleteFile = text.split('\\n');\n\n      this.setState({\n        fileName: files[0].name,\n        jsonData: text,\n        OriginalcompleteFile: tempOriginalcompleteFile,\n      })\n    }\n    reader.readAsText(files[0]);\n  }\n\n  handleTableQuery(event) {\n\n    let completeFile = this.state.OriginalcompleteFile;\n\n    const Parser = require('sql-ddl-to-json-schema');\n    const parser = new Parser('mysql');\n    let tableName = [];\n    let num_cols = [];\n    let col_names = [[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],['']];\n    let datatypes = [[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],['']];\n    let pk = [[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],['']];\n    let fk = [[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],['']];\n    let ref_table = [[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],[''],['']];\n    let str1=[];\n\n    for ( let n = 0; n < completeFile.length; n++ ) {\n      let temp_completeString = completeFile[n].replace(\"SERIAL\",\"INT\");\n      let completeString = temp_completeString.replace(/`/g,\"\");\n      //console.log(completeString);\n      let sql = completeString;\n      parser.feed(sql);\n      let parsedJsonFormat = parser.results;\n      let compactJsonTablesArray = parser.toCompactJson(parsedJsonFormat);\n      //console.log(typeof (compactJsonTablesArray[0]));\n      //let compactJsonTablesArray = temp_compactJsonTablesArray.replace(\"\\`\",\"\");\n      //console.log(compactJsonTablesArray);\n      //console.log((compactJsonTablesArray[0]).name);    OUTPUT: Table name\n      tableName[n] = (compactJsonTablesArray[0]).name;\n      //console.log((compactJsonTablesArray[0]).columns);\n      //console.log(((compactJsonTablesArray[0]).columns).length);      OUTPUT: number of columns\n      num_cols[n] = ((compactJsonTablesArray[0]).columns).length;\n\n      for ( let i = 0; i < num_cols[n]; i++ ) {\n        pk[n][i] = false;\n      }\n\n      for( let j = 0; j < num_cols[n]; j++ ) {\n        //console.log((((compactJsonTablesArray[0].columns))[j]).name);   OUPUT: names of columns\n        col_names[n][j] =  (((compactJsonTablesArray[0].columns))[j]).name;\n        //console.log(((((compactJsonTablesArray[0].columns))[j]).type).datatype);\n        datatypes[n][j] = ((((compactJsonTablesArray[0].columns))[j]).type).datatype;\n        if( (compactJsonTablesArray[0]).primaryKey !== undefined ) {\n          if ( ((((compactJsonTablesArray[0]).primaryKey).columns).length) >= 1 ) {\n            for ( let a = 0; a < ((((compactJsonTablesArray[0]).primaryKey).columns).length); a++) {\n              if ( ((((compactJsonTablesArray[0]).primaryKey).columns[a]).column) === ((((compactJsonTablesArray[0].columns))[j]).name) ) {\n                pk[n][j] = true;\n              }\n            }\n          }\n        }\n        if(compactJsonTablesArray[0].hasOwnProperty('foreignKeys')) {\n          if ( ((compactJsonTablesArray[0]).foreignKeys).length >= 1 ) {\n            for (let b = 0; b < (((compactJsonTablesArray[0]).foreignKeys).length); b++ ) {\n              if ( (((compactJsonTablesArray[0]).foreignKeys[b]).columns).length >= 1 ) {\n                for (let c = 0; c < ((((compactJsonTablesArray[0]).foreignKeys[b]).columns).length); c++ ) {\n                  if ( ((((compactJsonTablesArray[0]).foreignKeys[b]).columns[c]).column) === ((((compactJsonTablesArray[0].columns))[j]).name) ) {\n                    fk[n][j] = true;\n                    //console.log(\"PK\"+n+\"\\n\"+temp_pk[n][i]);\n                    ref_table[n][j] = compactJsonTablesArray[0].foreignKeys[b].reference.table;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      str1[n] = '';\n      for( var k = 0; k < (num_cols[n]) - 1; k++ ) {\n        if( datatypes[n][k] === 'varchar' || datatypes[n][k] === 'varchar2' ) {\n          str1[n] += col_names[n][k]+\":char,\";\n        }\n        else {\n          str1[n] += col_names[n][k]+\":\"+ (datatypes[n][k])+\",\";\n        }\n      }\n      if( datatypes[n][((num_cols[n])-1)] === 'varchar' || datatypes[n][((num_cols[n])-1)] === 'varchar2' ) {\n        str1[n] += col_names[n][k]+\":char\";\n      }\n      else {\n        str1[n] += col_names[n][k]+\":\"+ (datatypes[n][((num_cols[n])-1)]);\n      }\n      \n    }\n    let FullQuery = '';\n    let num_tables = completeFile.length;\n    let flag = [num_tables];\n    for ( let x = 0; x < num_tables; x++) {\n      for (let y = 0; y < num_cols[x]; y++) {\n        if(pk[x][y] === true) {\n          flag[x] = true;\n          break;\n        }\n        else {\n          flag[x] = false;\n        }\n      }\n    }\n    for ( let l = 0; l < num_tables; l++ ) {\n\n      let graph_name = tableName[l];\n      let data = \"\";\n      for( let p = 0; p < num_cols[l]; p++) {\n\n        if(pk[l][p] === true) {\n          data += \"?\"+graph_name.toLowerCase()+\"_\"+col_names[l][p];\n          if(p === num_cols[l]-1) {\n            data+=\".\";\n          }\n        }\n        else {\n          //data += \" <\"+col_names[l][p]+\"> ?col\"+(p+1)+\";\";\n          if(flag[l] === false) {\n            if ( fk[l][p] === true ) {\n              data += \"[] <\"+col_names[l][p]+\"> ?\"+ref_table[l][p].toLowerCase()+\"_\"+col_names[l][p];\n              flag[l] = true;\n              if(p === num_cols[l]-1) {\n                data+=\".\";\n              }\n              else {\n                data +=\";\";\n              }\n            }\n            else {\n              data += \"[] <\"+col_names[l][p]+\"> ?\"+col_names[l][p];\n              flag[l] = true;\n              if(p === num_cols[l]-1) {\n                data+=\".\";\n              }\n              else {\n                data +=\";\";\n              }\n            }\n            \n          }\n          else {\n            if( fk[l][p] === true) {\n              data += \"<\"+col_names[l][p]+\"> ?\"+ref_table[l][p].toLowerCase()+\"_\"+col_names[l][p];\n              if(p === num_cols[l]-1) {\n                data+=\".\";\n              }\n              else {\n                data +=\";\";\n              }\n            }\n            else {\n              data += \"<\"+col_names[l][p]+\"> ?\"+col_names[l][p];\n              if(p === num_cols[l]-1) {\n                data+=\".\";\n              }\n              else {\n                data +=\";\";\n              }\n            }\n            \n          }\n        }\n        data += \"\\n\";\n      }\n      let binds = '';\n     \n      for(let q = 0; q < num_cols[l]; q++) {\n        if(pk[l][q] === true) {\n          binds += \"BIND(IRI(CONCAT(\\\"\"+graph_name+\"#\\\",STR(?\"+col_names[l][q]+\"))) AS ?\"+graph_name.toLowerCase()+\"_\"+col_names[l][q]+\")\\n\";\n        }\n        if(fk[l][q] === true) {\n          binds += \"BIND(IRI(CONCAT(\\\"\"+ref_table[l][q]+\"#\\\",STR(?\"+col_names[l][q]+\"))) AS ?\"+ref_table[l][q].toLowerCase()+\"_\"+col_names[l][q]+\")\\n\";\n        }\n      }\n      FullQuery+=\"INSERT { \\nGRAPH <\"+graph_name+\"> {\\n\"+data+\" } \\n} \\nWHERE { \\nTABLE <file://\"+this.state.fileName+\"> ( \\n 'csv', 'global', ',',true,'\"+str1[l]+\"')\\n\"+binds+\"};;\\n\";\n    }\n    document.getElementById(\"load_query_preview_text\").value = FullQuery;\n\n    let Dracula = require('graphdracula');\n    let Graph = Dracula.Graph;\n    let Renderer = Dracula.Renderer.Raphael;\n    let Layout = Dracula.Layout.Spring;\n\n    let graph = new Graph();\n\n    for ( let r = 0; r < completeFile.length - 1; r++) {\n      graph.addNode(tableName[r]);\n      for ( let s = 0; s < num_cols[r]; s++) {\n        if(fk[r][s] === true ) {\n          graph.addEdge(tableName[r],ref_table[r][s], {directed:true});\n        }\n      }\n      \n    }\n    for ( let t = 0; t < num_cols[completeFile.length - 1]; t++) {\n        if(fk[completeFile.length - 1][t] === true ) {\n          graph.addEdge(tableName[completeFile.length - 1],ref_table[completeFile.length - 1][t],{directed:true});\n        }\n      }\n\n    let layout = new Layout(graph);\n    let renderer = new Renderer('#secondPage_second_div', graph, 400, 300);\n    renderer.draw();\n\n    this.setState({\n      table_query: FullQuery,\n      columnMappingString: str1,\n    });\n  }\n\n/*\n  handleInsertQuery(event) {\n   \n    var data = this.state.jsonData;\n    var splitLine = data.split('\\n');\n\n    var eachLine = [];\n     for ( var i = 0; i < splitLine.length; i++) {\n      eachLine[i] = splitLine[i];\n    }\n\n    var tableName = [];\n    var dataArray = [];\n    for ( var j = 0; j < eachLine.length; j++) {\n      tableName[j] = eachLine[j].split(\" \")[2];\n      dataArray[j] = eachLine[j].split(\" \")[4];\n    }\n    var eachDataArray = [];\n\n    for ( var k = 0; k < dataArray.length; k++ ) {\n      eachDataArray[k] = dataArray[k].slice(1,-2).split(\",\");\n    }\n    console.log(tableName);\n    console.log(dataArray);\n    console.log(eachDataArray);\n\n//console.log(dataName[2].slice(1,-2).split(',')[1]);\n    var str = \"<\"+tableName[0]+eachDataArray[0][0]+\"> a <\"+tableName[0]+\">\\n\";\n    str += \"<\"+tableName[0]+eachDataArray[0][0]+\"> <name> \"+eachDataArray[0][1]+\"\\n\";\n    str += \"<\"+tableName[0]+eachDataArray[0][0]+\"> <employer> <Company\"+eachDataArray[0][2]+\">\\n\";\n\n    str += \"<\"+tableName[0]+eachDataArray[1][0]+\"> a <\"+tableName[0]+\">\\n\";\n    str += \"<\"+tableName[0]+eachDataArray[1][0]+\"> <name> \"+eachDataArray[1][1]+\"\\n\";\n    str += \"<\"+tableName[0]+eachDataArray[1][0]+\"> <employer> <Company\"+eachDataArray[1][2]+\">\\n\";\n\n    str += \"<\"+tableName[0]+eachDataArray[2][0]+\"> a <\"+tableName[0]+\">\\n\";\n    str += \"<\"+tableName[0]+eachDataArray[2][0]+\"> <name> \"+eachDataArray[2][1]+\"\\n\";\n    str += \"<\"+tableName[0]+eachDataArray[2][0]+\"> <employer> <Company\"+eachDataArray[2][2]+\">\\n\";\n\n    str += \"<\"+tableName[3]+eachDataArray[3][0]+\"> a <\"+tableName[3]+\">\\n\";\n    str += \"<\"+tableName[3]+eachDataArray[3][0]+\"> <name> \"+eachDataArray[3][1]+\"\\n\";\n    str += \"<\"+tableName[3]+eachDataArray[3][0]+\"> <employer> <Company\"+eachDataArray[3][2]+\">\\n\";\n\n    str += \"<\"+tableName[3]+eachDataArray[4][0]+\"> a <\"+tableName[3]+\">\\n\";\n    str += \"<\"+tableName[3]+eachDataArray[4][0]+\"> <name> \"+eachDataArray[3][1]+\"\\n\";\n    str += \"<\"+tableName[3]+eachDataArray[4][0]+\"> <employer> <Company\"+eachDataArray[3][2]+\">\\n\";\n    document.getElementById(\"load_query_preview_text\").value = str;\n  }\n*/\n  handleSaveQuery(event) {\n    let textToSave = this.state.clicked_button ===\"insert\" ? this.state.insert_query:this.state.table_query;\n    let textToSaveAsBlob = new Blob([textToSave], {type: \"text/plain\"});\n    let textToSaveAsURL = window.URL.createObjectURL(textToSaveAsBlob);\n    //let fileNameToSaveAs = document.getElementById(\"inputFileNameToSaveAs\").value;\n\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.download = \"file.txt\";\n    downloadLink.innerHTML = \"Download File\";\n    downloadLink.href = textToSaveAsURL;\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n  }\n/*handleConnect() {\n    //var uri = 'http://localhost:8080/connect?server=127.0.0.1&port=8080&username=root&db_name=tpch';\n //   var query = \"SELECT * WHERE {SERVICE <\"+uri+\">{?s ?p ?o}}\";\n       var query = \"SELECT (count(*) as ?c) WHERE {?s ?p ?o}\";\n\n    var encoded = encodeURI(query);\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", '/sparql',true);\n    xhr.setRequestHeader(\"Accept\", \"application/sparql-results+json\");\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    //xhr.setRequestHeader(\"Content-Type\", \"application/sparql-query\");\n    var reqbody = \"query=\"+encoded;\n    //xhr.setRequestHeader(\"Content-Length\",reqbody.length);\n    xhr.onreadystatechange = function() { // Call a function when the state changes.\n        if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\n            // Request finished. Do processing here.\n            console.log(xhr.responseText);\n\n        }\n    }\n    xhr.send(reqbody);\n    //xhr.send(query);\n\n  }*/\n\n\n\n  render() \n  { \n    return (\n      <div>\n        <div id=\"secondPage_first_div\">\n          <div id=\"server_div\">\n            <div id=\"server_label_div\">\n              Server: \n            </div>\n            <div id=\"server_text_div\">\n              <input type=\"text\" id=\"server_text\"></input>\n            </div>\n          </div>\n\n          <div id=\"port_div\">\n            <div id=\"port_label_div\">\n              Port: \n            </div>\n            <div id=\"port_text_div\">\n              <input type=\"text\" id=\"port_text\"></input>\n            </div>\n          </div>\n\n          <div id=\"username_div\">\n            <div id=\"username_label_div\">\n              Username: \n            </div>\n            <div id=\"username_text_div\">\n              <input type=\"text\" id=\"username_text\"></input>\n            </div>\n          </div>\n\n          <div id=\"password_div\">\n            <div id=\"password_label_div\">\n              Password: \n            </div>\n            <div id=\"password_text_div\">\n              <input type=\"password\" id=\"password_text\"></input>\n            </div>\n          </div>\n\n          <div id=\"dbName_div\">\n            <div id=\"dbName_label_div\">\n              Database Name: \n            </div>\n            <div id=\"dbName_text_div\">\n              <input type=\"text\" id=\"dbName_text\"></input>\n            </div>\n          </div>\n         {/*} <button id=\"secondPage_browse_btn\" onClick={this.handleConnect}>Connect</button>*/}\n          <div id=\"secondPage_browse_btn_div\"> \n            <ReactFileReader\n              multipleFiles={false}\n              fileTypes={[\".json\",\".sql\",\".ddl\"]}\n              handleFiles={this.handleFiles}>\n                    \n              <button id=\"secondPage_browse_btn\">Browse</button>\n            </ReactFileReader>\n          </div>\n        </div>\n\n        <div id=\"secondPage_second_div\">\n          {/*<ElmArchitecture node_name=\"id\"></ElmArchitecture>*/}\n        </div>\n        \n        <div id=\"secondPage_third_div\">\n          {/*{this.state.jsonData}*/}\n        </div>\n  \n        <div id=\"secondPage_fourth_div\">\n          <div id=\"secondPage_generate_table_query_div\">\n            <button type=\"button\" id=\"secondPage_table_query_button\" onClick={this.handleTableQuery}>Generate Table Query</button>\n          </div>\n        </div>\n\n        <div id=\"load_query_preview_div\">\n          <div id=\"load_query_preview_label\">\n            <b>Load Query (Preview):  </b>\n          </div>\n          <div id=\"load_query_preview_text_div\">\n            <textarea id=\"load_query_preview_text\" rows=\"4\" defaultValue={this.state.clicked_button ===\"insert\" ? this.state.insert_query:this.state.table_query} onChange={this.onQueryChanged}/>\n          </div>\n        </div>\n\n        <div id=\"save_query_div\">  \n          <button type=\"button\" id=\"save_query_button\" onClick={this.handleSaveQuery}>Save Query</button>\n        </div>\n\n        {/*<div id=\"run_query_div\">\n          <button type=\"button\" id=\"run_query_button\">Run Query</button>\n        </div>*/}\n      </div>\n\n    )\n  }\n}\n\nexport default SecondPage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport './ThirdPage.css';\n\nclass ThirdPage extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            load_option: 'global',\n            url: '',\n            graph_name: '',\n            query: '',\n        };\n        this.handleLoadOptionsChange = this.handleLoadOptionsChange.bind(this);\n        this.handleURLChange = this.handleURLChange.bind(this);\n        this.handleGraphNameChange = this.handleGraphNameChange.bind(this);\n        this.handleLoadQuery = this.handleLoadQuery.bind(this);\n        this.onQueryChanged = this.onQueryChanged.bind(this);\n        this.handleSaveQuery = this.handleSaveQuery.bind(this);\n    }\n    handleLoadOptionsChange(event) {\n        this.setState({\n            load_option: event.target.value,\n        })\n    }\n    handleURLChange(event) {\n        this.setState({\n            url: event.target.value,\n        })\n    }\n    handleGraphNameChange(event) {\n        this.setState({\n            graph_name: event.target.value,\n        })\n    }\n    handleLoadQuery () {\n        let load_query = \"LOAD WITH '\"+this.state.load_option+\"' <\"+this.state.url+\"> INTO GRAPH <\"+this.state.graph_name+\">\";\n        document.getElementById('load_query_preview_text').value = load_query;\n        this.setState({\n            query: load_query,\n        })\n    }\n    onQueryChanged(event) {\n        this.setState({\n            query: event.target.value,\n        })\n    }\n    handleSaveQuery() {\n        let textToSave = this.state.query;\n        let textToSaveAsBlob = new Blob([textToSave], {type: \"text/plain\"});\n        let textToSaveAsURL = window.URL.createObjectURL(textToSaveAsBlob);\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.download = \"file.txt\";\n        downloadLink.innerHTML = \"Download File\";\n        downloadLink.href = textToSaveAsURL;\n        downloadLink.style.display = \"none\";\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n    }\n    render()\n    {\n        return (\n            <div>\n                <div id=\"load_options_div\">\n                    <div id=\"load_options_label\">\n                        Load WITH Options :\n                    </div>\n                    <select id=\"load_options_select\" size=\"1\" onChange={this.handleLoadOptionsChange}>\n                        <option value=\"global\">global</option>\n                        <option value=\"leader\">leader</option>\n                        <option value=\"compute\">compute</option>\n                    </select>\n                </div>\n                <div id=\"url_div\">\n                    <div id=\"url_label_div\">\n                        Enter URL:\n                    </div>\n                    <input contentEditable type=\"text\" id=\"url_textbox\" onChange={this.handleURLChange}/>\n                </div>\n                <div id=\"graph_div\">\n                    <div id=\"graph_label_div\">\n                        Enter Graph Name:\n                    </div>\n                    <input contentEditable type=\"text\" id=\"graph_textbox\" onChange={this.handleGraphNameChange}/>\n                </div>\n                <div id=\"generate_load_query_div\">\n                    <button type=\"button\" id=\"load_query_button\" onClick={this.handleLoadQuery}>Generate Load Query</button>\n                </div>\n                <div id=\"load_query_preview_div\">\n                    <div id=\"load_query_preview_label\">\n                       <b> Load Query (Preview):</b>\n                    </div>\n                    <div id=\"load_query_preview_text_div\">\n                        <textarea id=\"load_query_preview_text\" rows=\"2\" onChange={this.onQueryChanged}/>\n                    </div>\n                </div>\n                <div id=\"save_query_div\">\n                    <button type=\"button\" id=\"save_query_button\" onClick={this.handleSaveQuery}>Save Query</button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default ThirdPage;\n","import React, { Component } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './index.css';\nimport 'react-tabs/style/react-tabs.css'\n\nimport FirstPage from './FirstPage'\nimport SecondPage from './SecondPage'\nimport ThirdPage from \"./ThirdPage\";\n\nclass TabPage extends Component {\n\n\trender() \n\t{\n\t\treturn (\n\t\t\t<Tabs>\n    \t\t\t<TabList>\n    \t\t\t\t<Tab>CSV</Tab>\n      \t\t\t\t<Tab>DB</Tab>\n\t\t\t    \t<Tab>TTL</Tab>\n\t\t\t    </TabList>\n\t    \t\t<TabPanel>\n\t\t    \t\t<FirstPage />\n\t    \t\t</TabPanel>\n\t    \t\t<TabPanel>\n\t      \t\t\t<SecondPage />\n\t    \t\t</TabPanel>\n\t\t\t    <TabPanel>\n\t\t\t    \t<ThirdPage />\n\t\t\t    </TabPanel>\n  \t\t\t</Tabs>\n\t\t)\n\t}\n}\n\nexport default TabPage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainPage from './MainPage'\n\n\nReactDOM.render(<MainPage />, document.getElementById('root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}